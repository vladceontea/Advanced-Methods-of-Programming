Program State ID:8
ExeStack:
-> (v1 is Ref(int);(v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> v1 is Ref(int)
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> v1 is Ref(int)
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> v2 is Ref(int)
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> v2 is Ref(int)
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> x is int
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> x is int
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> q is int
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> q is int
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> new(v1, 20)
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> new(v1, 20)
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> new(v2, 30)
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> new(v2, 30)
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> NewLock(x)
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> NewLock(x)
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))))
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))))
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> (FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> (FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> NewLock(q)
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))))
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> NewLock(q)
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))))
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) - 1);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) - 1);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))))
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))))
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:11
ExeStack:
-> (FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:8
ExeStack:
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:11
ExeStack:
-> (FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:8
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> wH(v1, rH(v1) * 10)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:11
ExeStack:
-> FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))))
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:8
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> wH(v1, rH(v1) * 10)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:11
ExeStack:
-> FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))))
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:8
ExeStack:
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:11
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:12
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) + 5);Unlock(q)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:8
ExeStack:
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:11
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:12
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) + 5);Unlock(q)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:8
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:11
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:12
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:11
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:12
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:11
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:12
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:8
ExeStack:
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:11
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:12
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:8
ExeStack:
-> No operation.
-> (No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> wH(v1, rH(v1) - 1)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:11
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:12
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:8
ExeStack:
-> No operation.
-> (No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> wH(v1, rH(v1) - 1)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:11
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:12
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:8
ExeStack:
-> (No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:11
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:12
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:8
ExeStack:
-> (No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:11
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:12
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:8
ExeStack:
-> No operation.
-> (Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:10
ExeStack:
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:11
ExeStack:
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:12
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:8
ExeStack:
-> No operation.
-> (Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:11
ExeStack:
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:12
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:8
ExeStack:
-> (Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:11
ExeStack:
-> wH(v2, rH(v2) * 10)
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:12
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:8
ExeStack:
-> (Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:11
ExeStack:
-> wH(v2, rH(v2) * 10)
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:12
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:11
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:12
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:11
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:12
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 0, Value: 12
------------------------------------------
Program State ID:11
ExeStack:
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 0, Value: 12
------------------------------------------
Program State ID:12
ExeStack:
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 0, Value: 12
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 0, Value: 12
------------------------------------------
Program State ID:12
ExeStack:
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 0, Value: 12
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 0, Value: 12
------------------------------------------
Program State ID:12
ExeStack:
-> wH(v2, rH(v2) + 5)
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 0, Value: 12
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 0, Value: 12
------------------------------------------
Program State ID:12
ExeStack:
-> wH(v2, rH(v2) + 5)
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 0, Value: 12
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 12
------------------------------------------
Program State ID:12
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 12
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 12
------------------------------------------
Program State ID:12
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 12
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:12
ExeStack:
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> print(rH(v1))
-> (Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> print(rH(v1))
-> (Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> (Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> (Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> Unlock(x)
-> (Lock(q);(print(rH(v2));Unlock(q)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> Unlock(x)
-> (Lock(q);(print(rH(v2));Unlock(q)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> (Lock(q);(print(rH(v2));Unlock(q)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (Lock(q);(print(rH(v2));Unlock(q)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(q)
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(q)
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> print(rH(v2))
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> print(rH(v2))
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 305
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 305
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 305
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (v1 is Ref(int);(v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> v1 is Ref(int)
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> v1 is Ref(int)
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> v2 is Ref(int)
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> v2 is Ref(int)
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> x is int
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> x is int
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> q is int
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> q is int
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> new(v1, 20)
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> new(v1, 20)
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> new(v2, 30)
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> new(v2, 30)
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> NewLock(x)
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> NewLock(x)
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))))
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))))
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> (FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> (FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> NewLock(q)
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))))
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> NewLock(q)
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))))
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) - 1);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) - 1);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))))
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))))
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:11
ExeStack:
-> (FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:8
ExeStack:
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:11
ExeStack:
-> (FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:8
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> wH(v1, rH(v1) * 10)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:11
ExeStack:
-> FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))))
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:8
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> wH(v1, rH(v1) * 10)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:11
ExeStack:
-> FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))))
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:8
ExeStack:
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:11
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:12
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) + 5);Unlock(q)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:8
ExeStack:
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:11
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:12
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) + 5);Unlock(q)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:8
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:11
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:12
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:11
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:12
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:11
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:12
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:8
ExeStack:
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:11
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:12
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:8
ExeStack:
-> No operation.
-> (No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> wH(v1, rH(v1) - 1)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:11
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:12
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:8
ExeStack:
-> No operation.
-> (No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> wH(v1, rH(v1) - 1)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:11
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:12
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:8
ExeStack:
-> (No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:11
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:12
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:8
ExeStack:
-> (No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:11
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:12
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:8
ExeStack:
-> No operation.
-> (Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:10
ExeStack:
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:11
ExeStack:
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:12
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:8
ExeStack:
-> No operation.
-> (Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:11
ExeStack:
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:12
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:8
ExeStack:
-> (Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:11
ExeStack:
-> wH(v2, rH(v2) * 10)
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:12
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:8
ExeStack:
-> (Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:11
ExeStack:
-> wH(v2, rH(v2) * 10)
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:12
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:11
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:12
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:11
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:12
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 0, Value: 11
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 0, Value: 12
------------------------------------------
Program State ID:11
ExeStack:
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 0, Value: 12
------------------------------------------
Program State ID:12
ExeStack:
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 0, Value: 12
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 0, Value: 12
------------------------------------------
Program State ID:12
ExeStack:
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 0, Value: 12
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 0, Value: 12
------------------------------------------
Program State ID:12
ExeStack:
-> wH(v2, rH(v2) + 5)
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 0, Value: 12
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 0, Value: 12
------------------------------------------
Program State ID:12
ExeStack:
-> wH(v2, rH(v2) + 5)
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 0, Value: 12
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 12
------------------------------------------
Program State ID:12
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 12
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 12
------------------------------------------
Program State ID:12
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 12
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:12
ExeStack:
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> print(rH(v1))
-> (Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> print(rH(v1))
-> (Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> (Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> (Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> Unlock(x)
-> (Lock(q);(print(rH(v2));Unlock(q)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> Unlock(x)
-> (Lock(q);(print(rH(v2));Unlock(q)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> (Lock(q);(print(rH(v2));Unlock(q)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (Lock(q);(print(rH(v2));Unlock(q)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(q)
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(q)
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> print(rH(v2))
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> print(rH(v2))
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 305
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 305
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 305
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (v1 is Ref(int);(v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v1 is Ref(int)
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v1 is Ref(int)
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v2 is Ref(int)
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v2 is Ref(int)
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> x is int
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> x is int
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> q is int
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> q is int
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v1, 20)
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v1, 20)
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v2, 30)
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v2, 30)
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(x)
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(x)
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))))
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))))
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(q)
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))))
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(q)
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))))
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) - 1);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) - 1);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))))
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))))
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:9
ExeStack:
-> (FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:9
ExeStack:
-> (FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> wH(v1, rH(v1) - 1)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:9
ExeStack:
-> FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))))
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> wH(v1, rH(v1) - 1)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:9
ExeStack:
-> FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))))
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:9
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:10
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) + 5);Unlock(q)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:9
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:10
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) + 5);Unlock(q)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 8
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 7
------------------------------------------
Program State ID:7
ExeStack:
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 7
------------------------------------------
Program State ID:8
ExeStack:
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 7
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 7
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 7
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 7
------------------------------------------
Program State ID:7
ExeStack:
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 7
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 7
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 7
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 7
------------------------------------------
Program State ID:7
ExeStack:
-> wH(v1, rH(v1) * 10)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 7
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 7
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 7
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 7
------------------------------------------
Program State ID:7
ExeStack:
-> wH(v1, rH(v1) * 10)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 7
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 7
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 7
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 7
------------------------------------------
Program State ID:7
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 7
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 7
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 7
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 7
------------------------------------------
Program State ID:7
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 7
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 7
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 7
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:6
ExeStack:
-> (Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> wH(v2, rH(v2) + 5)
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:6
ExeStack:
-> (Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> wH(v2, rH(v2) + 5)
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 0, Value: 10
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:10
ExeStack:
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> wH(v2, rH(v2) * 10)
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> wH(v2, rH(v2) * 10)
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 0, Value: 9
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 0, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 0, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> print(rH(v1))
-> (Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 0, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> print(rH(v1))
-> (Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 0, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> (Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 0, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> (Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 0, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> Unlock(x)
-> (Lock(q);(print(rH(v2));Unlock(q)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 0, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> Unlock(x)
-> (Lock(q);(print(rH(v2));Unlock(q)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 0, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> (Lock(q);(print(rH(v2));Unlock(q)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (Lock(q);(print(rH(v2));Unlock(q)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(q)
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(q)
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 0, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 0, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> print(rH(v2))
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 0, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> print(rH(v2))
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 0, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 350
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 0, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 350
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 0, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 350
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 0, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (v1 is Ref(int);(v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v1 is Ref(int)
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v1 is Ref(int)
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v2 is Ref(int)
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v2 is Ref(int)
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> x is int
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> x is int
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> q is int
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> q is int
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v1, 20)
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v1, 20)
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v2, 30)
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v2, 30)
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(x)
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(x)
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))))
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))))
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(q)
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))))
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(q)
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))))
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) - 1);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) - 1);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))))
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (v1 is Ref(int);(v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v1 is Ref(int)
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v1 is Ref(int)
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v2 is Ref(int)
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v2 is Ref(int)
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> x is int
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> x is int
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> q is int
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> q is int
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v1, 20)
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v1, 20)
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v2, 30)
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v2, 30)
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(x)
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(x)
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))))
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))))
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(q)
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))))
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(q)
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))))
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) - 1);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) - 1);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))))
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))))
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:9
ExeStack:
-> (FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:9
ExeStack:
-> (FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> wH(v1, rH(v1) - 1)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:9
ExeStack:
-> FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))))
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> wH(v1, rH(v1) - 1)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:9
ExeStack:
-> FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))))
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:9
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:10
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) + 5);Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:9
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:10
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) + 5);Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:7
ExeStack:
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:8
ExeStack:
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:7
ExeStack:
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:7
ExeStack:
-> wH(v1, rH(v1) * 10)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:7
ExeStack:
-> wH(v1, rH(v1) * 10)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:7
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:7
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:6
ExeStack:
-> (Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> wH(v2, rH(v2) + 5)
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:6
ExeStack:
-> (Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> wH(v2, rH(v2) + 5)
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> print(rH(v1))
-> (Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> print(rH(v1))
-> (Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> (Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> (Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> Unlock(x)
-> (Lock(q);(print(rH(v2));Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> Unlock(x)
-> (Lock(q);(print(rH(v2));Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> (Lock(q);(print(rH(v2));Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:6
ExeStack:
-> (Lock(q);(print(rH(v2));Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(q)
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> wH(v2, rH(v2) * 10)
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(q)
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> wH(v2, rH(v2) * 10)
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(q)
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(q)
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(q)
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(q)
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> print(rH(v2))
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> print(rH(v2))
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 350
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 350
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 350
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (v1 is Ref(int);(v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v1 is Ref(int)
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v1 is Ref(int)
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v2 is Ref(int)
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v2 is Ref(int)
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> x is int
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> x is int
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> q is int
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> q is int
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v1, 20)
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v1, 20)
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v2, 30)
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v2, 30)
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(x)
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(x)
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))))
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))))
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(q)
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))))
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(q)
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))))
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) - 1);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) - 1);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))))
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))))
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:9
ExeStack:
-> (FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:9
ExeStack:
-> (FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> wH(v1, rH(v1) - 1)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:9
ExeStack:
-> FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))))
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> wH(v1, rH(v1) - 1)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:9
ExeStack:
-> FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))))
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:9
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:10
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) + 5);Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:9
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:10
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) + 5);Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:7
ExeStack:
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:8
ExeStack:
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:7
ExeStack:
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:7
ExeStack:
-> wH(v1, rH(v1) * 10)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:7
ExeStack:
-> wH(v1, rH(v1) * 10)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:7
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:7
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:6
ExeStack:
-> (Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> wH(v2, rH(v2) + 5)
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:6
ExeStack:
-> (Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> wH(v2, rH(v2) + 5)
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:10
ExeStack:
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> wH(v2, rH(v2) * 10)
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> wH(v2, rH(v2) * 10)
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> print(rH(v1))
-> (Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> print(rH(v1))
-> (Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> (Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> (Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> Unlock(x)
-> (Lock(q);(print(rH(v2));Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> Unlock(x)
-> (Lock(q);(print(rH(v2));Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> (Lock(q);(print(rH(v2));Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (Lock(q);(print(rH(v2));Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(q)
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(q)
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> print(rH(v2))
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> print(rH(v2))
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 350
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 350
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 350
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (v1 is Ref(int);(v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v1 is Ref(int)
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v1 is Ref(int)
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v2 is Ref(int)
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v2 is Ref(int)
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> x is int
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> x is int
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> q is int
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> q is int
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v1, 20)
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v1, 20)
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v2, 30)
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v2, 30)
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(x)
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(x)
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))))
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))))
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(q)
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))))
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(q)
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))))
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) - 1);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) - 1);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))))
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))))
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> (FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> (FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> wH(v1, rH(v1) * 10)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> wH(v1, rH(v1) - 1)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))))
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> wH(v1, rH(v1) * 10)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> wH(v1, rH(v1) - 1)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))))
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) + 5);Unlock(q)))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) + 5);Unlock(q)))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> wH(v2, rH(v2) * 10)
-> Unlock(q)
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> wH(v2, rH(v2) + 5)
-> Unlock(q)
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> wH(v2, rH(v2) * 10)
-> Unlock(q)
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> wH(v2, rH(v2) + 5)
-> Unlock(q)
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> print(rH(v1))
-> (Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> print(rH(v1))
-> (Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 200
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 200
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> Unlock(x)
-> (Lock(q);(print(rH(v2));Unlock(q)))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 200
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> Unlock(x)
-> (Lock(q);(print(rH(v2));Unlock(q)))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 200
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (Lock(q);(print(rH(v2));Unlock(q)))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 200
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (Lock(q);(print(rH(v2));Unlock(q)))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 200
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(q)
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 200
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(q)
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 200
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 200
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 200
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> print(rH(v2))
-> Unlock(q)
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 200
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> print(rH(v2))
-> Unlock(q)
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 200
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 350
-> 200
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 350
-> 200
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 350
-> 200
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (v1 is Ref(int);(v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v1 is Ref(int)
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v1 is Ref(int)
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v2 is Ref(int)
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v2 is Ref(int)
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> x is int
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> x is int
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> q is int
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> q is int
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v1, 20)
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v1, 20)
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v2, 30)
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v2, 30)
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(x)
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(x)
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))))
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))))
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(q)
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))))
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(q)
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))))
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) - 1);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) - 1);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))))
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))))
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> (FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> (FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> wH(v1, rH(v1) * 10)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> wH(v1, rH(v1) - 1)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))))
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> wH(v1, rH(v1) * 10)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> wH(v1, rH(v1) - 1)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))))
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) + 5);Unlock(q)))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) + 5);Unlock(q)))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (v1 is Ref(int);(v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v1 is Ref(int)
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v1 is Ref(int)
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v2 is Ref(int)
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v2 is Ref(int)
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> x is int
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> x is int
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> q is int
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> q is int
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v1, 20)
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v1, 20)
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v2, 30)
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v2, 30)
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(x)
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(x)
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))))
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))))
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(q)
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))))
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(q)
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))))
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) - 1);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) - 1);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))))
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))))
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:9
ExeStack:
-> (FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:9
ExeStack:
-> (FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> wH(v1, rH(v1) - 1)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:9
ExeStack:
-> FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))))
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> wH(v1, rH(v1) - 1)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:9
ExeStack:
-> FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))))
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:9
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:10
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) + 5);Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:9
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:10
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) + 5);Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:7
ExeStack:
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:8
ExeStack:
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:7
ExeStack:
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:7
ExeStack:
-> wH(v1, rH(v1) * 10)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:7
ExeStack:
-> wH(v1, rH(v1) * 10)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:7
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:7
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:6
ExeStack:
-> (Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> wH(v2, rH(v2) + 5)
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:6
ExeStack:
-> (Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> wH(v2, rH(v2) + 5)
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 10
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> print(rH(v1))
-> (Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> print(rH(v1))
-> (Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> (Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> (Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> Unlock(x)
-> (Lock(q);(print(rH(v2));Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> Unlock(x)
-> (Lock(q);(print(rH(v2));Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> (Lock(q);(print(rH(v2));Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:6
ExeStack:
-> (Lock(q);(print(rH(v2));Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(q)
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> wH(v2, rH(v2) * 10)
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(q)
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> wH(v2, rH(v2) * 10)
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 35
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(q)
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(q)
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 9
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(q)
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(q)
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> print(rH(v2))
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> print(rH(v2))
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 350
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 350
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 350
-> 190
FileTable:
HeapTable:
-> Key: 1, Value: 190
-> Key: 2, Value: 350
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (v1 is Ref(int);(v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v1 is Ref(int)
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v1 is Ref(int)
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v2 is Ref(int)
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v2 is Ref(int)
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> x is int
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> x is int
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> q is int
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> q is int
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v1, 20)
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v1, 20)
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v2, 30)
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v2, 30)
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(x)
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(x)
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))))
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))))
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(q)
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))))
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(q)
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))))
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) - 1);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) - 1);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))))
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))))
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:9
ExeStack:
-> (FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:9
ExeStack:
-> (FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> wH(v1, rH(v1) - 1)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:9
ExeStack:
-> FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))))
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> wH(v1, rH(v1) - 1)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:9
ExeStack:
-> FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))))
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:9
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:10
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) + 5);Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:8
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:9
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:10
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) + 5);Unlock(q)))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:7
ExeStack:
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:8
ExeStack:
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:7
ExeStack:
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:7
ExeStack:
-> wH(v1, rH(v1) * 10)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 1
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
------------------------------------------
Program State ID:6
ExeStack:
-> (v1 is Ref(int);(v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v1 is Ref(int)
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v1 is Ref(int)
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v2 is Ref(int)
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v2 is Ref(int)
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> x is int
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> x is int
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> q is int
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> q is int
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v1, 20)
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v1, 20)
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v2, 30)
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v2, 30)
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(x)
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(x)
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))))
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))))
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(q)
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))))
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(q)
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))))
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) - 1);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) - 1);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))))
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))))
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> (FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> (FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> wH(v1, rH(v1) * 10)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> wH(v1, rH(v1) - 1)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))))
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> wH(v1, rH(v1) * 10)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> wH(v1, rH(v1) - 1)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))))
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) + 5);Unlock(q)))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 19
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (v1 is Ref(int);(v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v1 is Ref(int)
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v1 is Ref(int)
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v2 is Ref(int)
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v2 is Ref(int)
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> x is int
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> x is int
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> q is int
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> q is int
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v1, 20)
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v1, 20)
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v2, 30)
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v2, 30)
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(x)
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(x)
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))))
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 2
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (x is int;(y is int;(NewLock(x);NewLock(y))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> x is int
-> (y is int;(NewLock(x);NewLock(y)))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> x is int
-> (y is int;(NewLock(x);NewLock(y)))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (y is int;(NewLock(x);NewLock(y)))
SymTable:
-> Key: x, Value: 0
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (y is int;(NewLock(x);NewLock(y)))
SymTable:
-> Key: x, Value: 0
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> y is int
-> (NewLock(x);NewLock(y))
SymTable:
-> Key: x, Value: 0
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> y is int
-> (NewLock(x);NewLock(y))
SymTable:
-> Key: x, Value: 0
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (NewLock(x);NewLock(y))
SymTable:
-> Key: x, Value: 0
-> Key: y, Value: 0
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (NewLock(x);NewLock(y))
SymTable:
-> Key: x, Value: 0
-> Key: y, Value: 0
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> NewLock(x)
-> NewLock(y)
SymTable:
-> Key: x, Value: 0
-> Key: y, Value: 0
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> NewLock(x)
-> NewLock(y)
SymTable:
-> Key: x, Value: 0
-> Key: y, Value: 0
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> NewLock(y)
SymTable:
-> Key: x, Value: 1
-> Key: y, Value: 0
Out:
FileTable:
HeapTable:
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> NewLock(y)
SymTable:
-> Key: x, Value: 1
-> Key: y, Value: 0
Out:
FileTable:
HeapTable:
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
SymTable:
-> Key: x, Value: 1
-> Key: y, Value: 1
Out:
FileTable:
HeapTable:
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (x is int;(y is int;(NewLock(x);NewLock(y))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> x is int
-> (y is int;(NewLock(x);NewLock(y)))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> x is int
-> (y is int;(NewLock(x);NewLock(y)))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (y is int;(NewLock(x);NewLock(y)))
SymTable:
-> Key: x, Value: 0
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (y is int;(NewLock(x);NewLock(y)))
SymTable:
-> Key: x, Value: 0
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> y is int
-> (NewLock(x);NewLock(y))
SymTable:
-> Key: x, Value: 0
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> y is int
-> (NewLock(x);NewLock(y))
SymTable:
-> Key: x, Value: 0
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (NewLock(x);NewLock(y))
SymTable:
-> Key: x, Value: 0
-> Key: y, Value: 0
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (NewLock(x);NewLock(y))
SymTable:
-> Key: x, Value: 0
-> Key: y, Value: 0
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> NewLock(x)
-> NewLock(y)
SymTable:
-> Key: x, Value: 0
-> Key: y, Value: 0
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> NewLock(x)
-> NewLock(y)
SymTable:
-> Key: x, Value: 0
-> Key: y, Value: 0
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> NewLock(y)
SymTable:
-> Key: x, Value: 2
-> Key: y, Value: 0
Out:
FileTable:
HeapTable:
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> NewLock(y)
SymTable:
-> Key: x, Value: 2
-> Key: y, Value: 0
Out:
FileTable:
HeapTable:
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
SymTable:
-> Key: x, Value: 2
-> Key: y, Value: 2
Out:
FileTable:
HeapTable:
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (x is int;(y is int;(NewLock(x);NewLock(y))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> x is int
-> (y is int;(NewLock(x);NewLock(y)))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> x is int
-> (y is int;(NewLock(x);NewLock(y)))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (y is int;(NewLock(x);NewLock(y)))
SymTable:
-> Key: x, Value: 0
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (y is int;(NewLock(x);NewLock(y)))
SymTable:
-> Key: x, Value: 0
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> y is int
-> (NewLock(x);NewLock(y))
SymTable:
-> Key: x, Value: 0
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> y is int
-> (NewLock(x);NewLock(y))
SymTable:
-> Key: x, Value: 0
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (NewLock(x);NewLock(y))
SymTable:
-> Key: x, Value: 0
-> Key: y, Value: 0
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> (NewLock(x);NewLock(y))
SymTable:
-> Key: x, Value: 0
-> Key: y, Value: 0
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> NewLock(x)
-> NewLock(y)
SymTable:
-> Key: x, Value: 0
-> Key: y, Value: 0
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> NewLock(x)
-> NewLock(y)
SymTable:
-> Key: x, Value: 0
-> Key: y, Value: 0
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:8
ExeStack:
-> NewLock(y)
SymTable:
-> Key: x, Value: 1
-> Key: y, Value: 0
Out:
FileTable:
HeapTable:
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> NewLock(y)
SymTable:
-> Key: x, Value: 1
-> Key: y, Value: 0
Out:
FileTable:
HeapTable:
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
SymTable:
-> Key: x, Value: 1
-> Key: y, Value: 2
Out:
FileTable:
HeapTable:
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (v1 is Ref(int);(v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v1 is Ref(int)
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v1 is Ref(int)
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (v2 is Ref(int);(x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v2 is Ref(int)
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> v2 is Ref(int)
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (x is int;(q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> x is int
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> x is int
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (q is int;(new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> q is int
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> q is int
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v1, 20);(new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v1, 20)
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v1, 20)
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (0, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (new(v2, 30);(NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v2, 30)
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> new(v2, 30)
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (0, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(x);(FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(x)
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(x)
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 0
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))));(NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))))
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))))
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (NewLock(q);(FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))));(Lock(x);(wH(v1, rH(v1) * 10);Unlock(x))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(q)
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))))
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> NewLock(q)
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> FORK((Lock(x);(wH(v1, rH(v1) - 1);Unlock(x))))
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) - 1);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))));(No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) * 10);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> (Lock(x);(wH(v1, rH(v1) - 1);Unlock(x)))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))))
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> FORK((FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))))
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
-> Key: 2, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
-> Key: 2, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
-> Key: 2, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> (FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
-> Key: 2, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
-> Key: 2, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> (wH(v1, rH(v1) * 10);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
-> Key: 2, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
-> Key: 2, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> (FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))));(Lock(q);(wH(v2, rH(v2) * 10);Unlock(q))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
-> Key: 2, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
-> Key: 2, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> wH(v1, rH(v1) * 10)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
-> Key: 2, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
-> Key: 2, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))))
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
-> Key: 2, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
-> Key: 2, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> wH(v1, rH(v1) * 10)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
-> Key: 2, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
-> Key: 2, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> FORK((Lock(q);(wH(v2, rH(v2) + 5);Unlock(q))))
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 20
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
-> Key: 2, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
-> Key: 2, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
-> Key: 2, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
-> Key: 2, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
-> Key: 2, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) + 5);Unlock(q)))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
-> Key: 2, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
-> Key: 2, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
-> Key: 2, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
-> Key: 2, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) * 10);Unlock(q)))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
-> Key: 2, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> (Lock(q);(wH(v2, rH(v2) + 5);Unlock(q)))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 7
-> Key: 2, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: -1
------------------------------------------
Program State ID:7
ExeStack:
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: -1
------------------------------------------
Program State ID:8
ExeStack:
-> Lock(x)
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: -1
------------------------------------------
Program State ID:9
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
-> Key: 2, Value: 9
------------------------------------------
Program State ID:8
ExeStack:
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
-> Key: 2, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
-> Key: 2, Value: 9
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
-> Key: 2, Value: 9
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
-> Key: 2, Value: 9
------------------------------------------
Program State ID:8
ExeStack:
-> (wH(v1, rH(v1) - 1);Unlock(x))
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
-> Key: 2, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> (wH(v2, rH(v2) * 10);Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
-> Key: 2, Value: 9
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
-> Key: 2, Value: 9
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
-> Key: 2, Value: 9
------------------------------------------
Program State ID:8
ExeStack:
-> wH(v1, rH(v1) - 1)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
-> Key: 2, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> wH(v2, rH(v2) * 10)
-> Unlock(q)
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
-> Key: 2, Value: 9
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
-> Key: 2, Value: 9
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
-> Key: 2, Value: 9
------------------------------------------
Program State ID:8
ExeStack:
-> wH(v1, rH(v1) - 1)
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
-> Key: 2, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> wH(v2, rH(v2) * 10)
-> Unlock(q)
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
-> Key: 2, Value: 9
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 200
-> Key: 2, Value: 30
LockTable:
-> Key: 1, Value: 8
-> Key: 2, Value: 9
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 1, Value: 8
-> Key: 2, Value: 9
------------------------------------------
Program State ID:8
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 1, Value: 8
-> Key: 2, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 1, Value: 8
-> Key: 2, Value: 9
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 1, Value: 8
-> Key: 2, Value: 9
------------------------------------------
Program State ID:6
ExeStack:
-> (No operation.;(Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 1, Value: 8
-> Key: 2, Value: 9
------------------------------------------
Program State ID:8
ExeStack:
-> Unlock(x)
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 1, Value: 8
-> Key: 2, Value: 9
------------------------------------------
Program State ID:9
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 1, Value: 8
-> Key: 2, Value: 9
------------------------------------------
Program State ID:10
ExeStack:
-> Lock(q)
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 1, Value: 8
-> Key: 2, Value: 9
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: 10
------------------------------------------
Program State ID:8
ExeStack:
SymTable:
-> Key: q, Value: 0
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: 10
------------------------------------------
Program State ID:9
ExeStack:
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: 10
------------------------------------------
Program State ID:6
ExeStack:
-> No operation.
-> (Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> (wH(v2, rH(v2) + 5);Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: 10
------------------------------------------
Program State ID:6
ExeStack:
-> (Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> wH(v2, rH(v2) + 5)
-> Unlock(q)
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: 10
------------------------------------------
Program State ID:6
ExeStack:
-> (Lock(x);(print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> wH(v2, rH(v2) + 5)
-> Unlock(q)
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 300
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: 10
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: 10
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(x)
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: 10
------------------------------------------
Program State ID:10
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: 10
------------------------------------------
Program State ID:6
ExeStack:
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 1, Value: 6
-> Key: 2, Value: -1
------------------------------------------
Program State ID:10
ExeStack:
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 1, Value: 6
-> Key: 2, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (print(rH(v1));(Unlock(x);(Lock(q);(print(rH(v2));Unlock(q)))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 1, Value: 6
-> Key: 2, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> print(rH(v1))
-> (Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 1, Value: 6
-> Key: 2, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> print(rH(v1))
-> (Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 1, Value: 6
-> Key: 2, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 1, Value: 6
-> Key: 2, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (Unlock(x);(Lock(q);(print(rH(v2));Unlock(q))))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 1, Value: 6
-> Key: 2, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> Unlock(x)
-> (Lock(q);(print(rH(v2));Unlock(q)))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 1, Value: 6
-> Key: 2, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> Unlock(x)
-> (Lock(q);(print(rH(v2));Unlock(q)))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 1, Value: 6
-> Key: 2, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (Lock(q);(print(rH(v2));Unlock(q)))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (Lock(q);(print(rH(v2));Unlock(q)))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(q)
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> Lock(q)
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: -1
------------------------------------------
Program State ID:6
ExeStack:
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> (print(rH(v2));Unlock(q))
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> print(rH(v2))
-> Unlock(q)
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> print(rH(v2))
-> Unlock(q)
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 305
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
-> Unlock(q)
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 305
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: 6
------------------------------------------
Program State ID:6
ExeStack:
SymTable:
-> Key: q, Value: 2
-> Key: x, Value: 1
-> Key: v1, Value: (1, int)
-> Key: v2, Value: (2, int)
Out:
-> 305
-> 199
FileTable:
HeapTable:
-> Key: 1, Value: 199
-> Key: 2, Value: 305
LockTable:
-> Key: 1, Value: -1
-> Key: 2, Value: -1
------------------------------------------
